import{_ as e,c as i,a as t,d as s,o as a}from"./app-CN6NtE4R.js";const l="/assets/68747470733a2f2f696d6167652e6d69616e7368692e6f6e6c696e652f696d673230323230353231323232323032332e706e67-C4ZZatkz.png",r="/assets/68747470733a2f2f696d6167652e6d69616e7368692e6f6e6c696e652f696d673230323230353231323232323537392e706e67-DUFsWIcp.png",d={},n=s('<h2 id="什么是redis的持久化" tabindex="-1"><a class="header-anchor" href="#什么是redis的持久化"><span>什么是Redis的持久化？</span></a></h2><p>因为Redis是基于内存的，为了防止一些意外导致数据丢失，需要将数据持久化到磁盘上</p><h2 id="redis常见的持久化机制有哪些-有什么优缺点" tabindex="-1"><a class="header-anchor" href="#redis常见的持久化机制有哪些-有什么优缺点"><span>Redis常见的持久化机制有哪些？有什么优缺点？</span></a></h2><p><strong>RDB</strong> ：Redis默认的持久化方式，按照一定的时间间隔将内存的数据以快照的形式保存到硬盘，恢复时是将快照读取到内存中。RDB持久化实际操作过程是fork一个子进程，先将数据集写入临时文件，写入成功后，再替换之前的文件，用二进制压缩存储</p><figure><img src="'+l+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>​</p><p>优点：</p><ul><li>适合对大规模的数据恢复，比AOF的启动效率高</li><li>只有一个文件dump.rdb，方便持久化</li><li>性能最大化，在开始持久化时，他唯一需要做的只是-------fork一个子进程，之后再由子进程完成这些持久化的工作，这样就可以极大地避免进程执行IO操作了。</li></ul><p>缺点：</p><ul><li>数据安全性低，在一定时间间隔内做一次备份，如果Redis突然宕机，会丢失最后一次快照修改</li><li>由于RDB是通过fork子进程来协助完成数据持久化工作的，因此当数据集较大时，可能会导致整个服务器停止服务几百毫秒，甚至是1秒</li></ul><p><strong>AOF</strong> ：AOF持久化以日志的形式记录服务器所处理的每一个写、删除操作，查询操作不会记录，以文本的方式记录，可以打开文件看到纤细的操作记录。</p><figure><img src="'+r+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>优点：</p><ul><li>具备更高的安全性，Redis提供了3种同步策略，分别是每秒同步、每修改同步和不同步。相比RDB突然宕机丢失的数据会更少，每秒同步只会丢失一秒的数据，每修改同步不会丢失数据。</li><li>由于该机制对日志文件的写入操作采用的是append操作，因此在写入过程中即使出现宕机现象，也不会破坏日志文件中已经存在的内容。</li><li>AOF包含一个格式清晰、易于理解的日志文件用于记录所有的修改操作，可以通过该文件对完成数据的重建</li></ul><p>缺点：</p><ul><li>对于相同数量的数据集而言，AOF文件通常要大于RDB文件（如果AOF文件太大了怎么办？重写）。RDB在恢复大数据集时的速度比AOF的恢复速度要快</li><li>根据AOF选择同步策略的不同，效率也不同，但AOF在运行效率往往要慢于RDB</li></ul>',16);function o(c,p){return a(),i("div",null,[t(" more "),n])}const m=e(d,[["render",o],["__file","持久化.html.vue"]]),f=JSON.parse('{"path":"/books/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/%E6%8C%81%E4%B9%85%E5%8C%96.html","title":"持久化","lang":"zh-CN","frontmatter":{"title":"持久化","cover":"https://upyun.yzyx.fun/7.jpg","date":"2024-07-26T00:00:00.000Z","category":["Redis"],"tag":["学习资料"]},"headers":[{"level":2,"title":"什么是Redis的持久化？","slug":"什么是redis的持久化","link":"#什么是redis的持久化","children":[]},{"level":2,"title":"Redis常见的持久化机制有哪些？有什么优缺点？","slug":"redis常见的持久化机制有哪些-有什么优缺点","link":"#redis常见的持久化机制有哪些-有什么优缺点","children":[]}],"git":{"createdTime":1723104803000,"updatedTime":1723104803000,"contributors":[{"name":"yunzhongyue","email":"15737369015@163.com","commits":1}]},"readingTime":{"minutes":2.32,"words":695},"filePathRelative":"books/数据库/Redis/持久化.md","localizedDate":"2024年7月26日","excerpt":""}');export{m as comp,f as data};
